{% schema %}
  {
    "name": "brand-banner",
    "tag": "section",
    "settings": [
      {
        "type": "color",
        "id": "background_color",
        "label": "Background Color",
        "default": "#ffffff"
      },
      {
        "type": "checkbox",
        "id": "is_scroll",
        "label": "Is Scroll",
        "default":false
      },
      {
        "type": "radio",
        "id": "scroll_direction",
        "label": "Scroll Direction",
        "options": [
            { "value": "left", "label": "向左" },
            { "value": "right", "label": "向右" }
          ],
        "default": "left"
      }
    ],
    "blocks": [
        {
            "type": "image",
            "name": "Image",
            "settings": [
                {
                    "type": "image_picker",
                    "id": "image",
                    "label": "Image",
                }
            ]
      }
    ],
    "presets": [
      {
        "name": "brand-banner",
        "settings": {
        }
      }
    ]
  }
{% endschema %}

{%- liquid
  assign scroll_direction = section.settings.scroll_direction
  assign is_scroll = section.settings.is_scroll
-%}

{%- capture background_color -%}
  {{ section.settings.background_color }}
{%- endcapture -%}

<div class="brand-banner__container"
  data-scroll-direction="{{ scroll_direction }}" data-section-id="{{ section.id }}">
  <div class="wrapper" style="background-color: {{ background_color }};">
    <div class="brand-banner__bgd" id="bannerTrack" 
    >
      {%- if is_scroll and scroll_direction == 'right' -%}
        <div class="image-wrapper image-slide right">
          {% for block in section.blocks %}
              {%- if block.settings.image -%}
                  {{
                      block.settings.image
                      | image_url: width: 200
                      | image_tag:
                          alt: block.settings.image.alt,
                          class: 'image'
                  }}
              {%- endif -%}
          {% endfor %}
        </div>
      {%- endif -%}
      
      <div class="image-wrapper">
          {% for block in section.blocks %}
              {%- if block.settings.image -%}
                  {{
                      block.settings.image
                      | image_url: width: 200
                      | image_tag:
                          alt: block.settings.image.alt,
                          class: 'image'
                  }}
              {%- endif -%}
          {% endfor %}
      </div>

      {%- if is_scroll and scroll_direction == 'left' -%}
        <div class="image-wrapper image-slide">
          {% for block in section.blocks %}
              {%- if block.settings.image -%}
                  {{
                      block.settings.image
                      | image_url: width: 200
                      | image_tag:
                          alt: block.settings.image.alt,
                          class: 'image'
                  }}
              {%- endif -%}
          {% endfor %}
        </div>
      {%- endif -%}
    </div>
  </div>
</div>

{{ 'brand-banner.css' | asset_url | stylesheet_tag  }}

<script defer type="module">
  (function(){
    const isScroll = '{{ section.settings.is_scroll }}';
  
    if(isScroll == 'false'){
      return;
    }

    const sectionId = '{{ section.id }}';
    const container = $(`.brand-banner__container[data-section-id="${ sectionId }"]`);

    const track = container.find("#bannerTrack");
    const wrapper = container.find(".image-wrapper:not(.image-slide)");

    // 滚动参数
    let scrollInterval;
    let srcollDirection = container.data("scrollDirection") == 'left' ? -1 : 1; // -1 向左，1向右
    let position = 0;
    const scrollStep = 1;

    // 检查横幅是否可见
    function isBannerVisible(){
        if(!container) return false;

        const style = window.getComputedStyle(container[0]);
        
        return (
            style.display !== 'none' &&
            style.visibility !== 'hidden' &&
            container.offsetParent !== null // 文档是否在文档流中
        );
    }

    // 计算滚动容器宽度
    function getWrapperWidth(){
        return wrapper.length ? wrapper[0].offsetWidth : 0;
    }

    // 开始滚动（仅当可见时）
    function startScrolling(){
        if(scrollInterval) clearInterval(scrollInterval);

        if(isBannerVisible()){
            scrollInterval = setInterval(()=>{
                // 再次检查可见性（防止中途被隐藏）
                if(!isBannerVisible()){
                    pauseScrolling();
                    return;
                }

                const wrapperWidth = getWrapperWidth();
                if(wrapperWidth === 0 ) return; 

                position += scrollStep * srcollDirection;

                // 滚动重置
                if(srcollDirection === -1){
                    if(position <= -wrapperWidth){
                        position = 0;
                    }
                }else {
                    if(position >= wrapperWidth){
                        position = 0;
                    }
                }
          
                track.css("transform",`translateX(${position}px)`);
            },10)
        }
    }    

    function pauseScrolling(){
        if(scrollInterval) {
            clearInterval(scrollInterval);
            scrollInterval = null;
        }
    }

    container.on('mouseenter',pauseScrolling);
    container.on('mouseleave',startScrolling);

    startScrolling();
  })()
</script>